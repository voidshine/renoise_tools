require(_clibroot.."cDocument")require(_xlibroot.."xSampleMapping")class'xKeyZoneLayout'(cDocument)xKeyZoneLayout.DOC_PROPS={note_steps="number",note_min="number",note_max="number",vel_steps="number",vel_min="number",vel_max="number",extend_notes="boolean",layer="number",map_velocity_to_volume="boolean",map_key_to_pitch="boolean"}function xKeyZoneLayout:__init(...)local a=cLib.unpack_args(...)self.extend_notes=a.extend_notes or xKeyZone.DEFAULT_EXTEND_NOTES;self.note_steps=a.note_steps or xKeyZone.DEFAULT_NOTE_STEPS;self.note_min=a.note_min or xKeyZone.DEFAULT_NOTE_MIN;self.note_max=a.note_max or xKeyZone.DEFAULT_NOTE_MAX;self.vel_steps=a.vel_steps or xKeyZone.DEFAULT_VEL_STEPS;self.vel_min=a.vel_min or xSampleMapping.MIN_VELOCITY;self.vel_max=a.vel_max or xSampleMapping.MAX_VELOCITY;self.layer=a.layer or xSampleMapping.DEFAULT_LAYER;self.map_velocity_to_volume=a.map_velocity_to_volume or xSampleMapping.DEFAULT_VEL_TO_VOL;self.map_key_to_pitch=a.map_key_to_pitch or xSampleMapping.DEFAULT_KEY_TO_PITCH end;class'xKeyZone'xKeyZone.KEYS_MODE={ALL_KEYS=1,WHITE_KEYS=2}xKeyZone.DEFAULT_NOTE_MIN=24;xKeyZone.DEFAULT_NOTE_MAX=95;xKeyZone.DEFAULT_NOTE_STEPS=6;xKeyZone.DEFAULT_VEL_STEPS=1;xKeyZone.MIN_VEL_STEPS=1;xKeyZone.MAX_VEL_STEPS=16;xKeyZone.MAX_VEL_STEPS=1;xKeyZone.MAX_NOTE_STEPS=16;xKeyZone.DEFAULT_EXTEND_NOTES=true;function xKeyZone.shift_by_semitones(b,c,d)TRACE("xKeyZone.shift_by_semitones(instr,sample_idx_from,amt)",b,c,d)for e=c,#b.samples do local f=b.samples[e]local g=f.sample_mapping;g.base_note=g.base_note+d;g.note_range={g.note_range[1]+d,g.note_range[2]+d}end end;function xKeyZone.memoize_mappings(h)TRACE("xKeyZone.memoize_mappings(mappings)",h)if#h==0 then return{}end;local i={}for j,k in ipairs(h)do local l=xSampleMapping.get_memoized_key(k)i[l]=xSampleMapping(k)i[l].index=j end;return i end;function xKeyZone.find_mapping(h,m,n,o)TRACE("xKeyZone.find_mapping(mappings,note_rng,vel_rng,layer)",#h,m,n,o)local p=table.keys(h)if#p==0 then return end;if not o then o=renoise.Instrument.LAYER_NOTE_ON end;local q=type(p[1])=="string"if q then local l=xSampleMapping.get_memoized_key(xSampleMapping{layer=o,note_range=m,velocity_range=n})if h[l]then return h[l]end else for j,k in ipairs(h)do local r=nil;local s=true;if m then s=cLib.table_compare(m,k.note_range)r=s and k or nil end;if s and n then s=cLib.table_compare(n,k.velocity_range)r=s and k or nil end;if r then local t=xSampleMapping(k)if not t.index then t.index=j end;return t end end end end;function xKeyZone.get_samples_mapped_to_note(b,u)TRACE("xKeyZone.get_samples_mapped_to_note(instr,note)",b,u)local i=table.create()for e=1,#b.samples do local f=b.samples[e]if xSampleMapping.within_note_range(u,f.sample_mapping)then i:insert(e)end end;return i end;function xKeyZone.create_multisample_layout(v,b)TRACE("xKeyZone.create_multisample_layout(layout,instr)",v,b)local w=xKeyZone.compute_multisample_notes(v.note_steps,v.note_min,v.note_max,false)local x=xKeyZone.compute_multisample_notes(v.note_steps,v.note_min,v.note_max,v.extend_notes)local y=xKeyZone.compute_multisample_velocities(v.vel_steps,v.vel_min,v.vel_max)local o=renoise.Instrument.LAYER_NOTE_ON;local z;if b then z=xKeyZone.memoize_mappings(b.sample_mappings[o])end;local i={}for j,m in ipairs(x)do for A,n in ipairs(y)do local f;if b then local t=xKeyZone.find_mapping(z,m,n)f=t and t.sample end;table.insert(i,xSampleMapping{layer=v.layer,base_note=w[j][1],map_velocity_to_volume=v.map_key_to_pitch,map_key_to_pitch=v.map_key_to_pitch,note_range=m,velocity_range=n,sample=f,index=#i})end end;return i end;function xKeyZone.compute_multisample_velocities(B,C,D)TRACE("xKeyZone.compute_multisample_velocities()",B,C,D)if C>D then C,D=D,C end;local i={}local E=(D-C+1)/B;local F=0;for j=1,B do local G=F+E;table.insert(i,{cLib.round_value(C+F),cLib.round_value(C+G-1)})F=G end;return i end;function xKeyZone.compute_multisample_notes(H,I,J,K)TRACE("xKeyZone.compute_multisample_notes(note_steps,note_min,note_max,extend)",H,I,J,K)if K==nil then K=xKeyZone.DEFAULT_EXTEND_NOTES end;if I>J then I,J=J,I end;local i={}local u=I;while u<J do local L=u;local G=u+H;local M=G-1;if K then if u==I then L=0 end;if G>=J then M=xSampleMapping.MAX_NOTE end end;table.insert(i,{cLib.round_value(L),cLib.round_value(M)})u=G end;return i end