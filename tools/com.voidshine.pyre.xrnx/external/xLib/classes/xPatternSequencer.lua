class'xPatternSequencer'function xPatternSequencer.within_bounds(a)TRACE("xPatternSequencer.within_bounds(seq_idx)",a)if a>#rns.sequencer.pattern_sequence then return false elseif a<1 then return false else return true end end;function xPatternSequencer.switch_to_sequence(b)TRACE("xPatternSequencer.switch_to_sequence(pos)",b)assert(type(b)=="SongPos","Expected renoise.SongPos as argument")local c=rns.transport.playing and rns.transport.playback_pos or rns.transport.edit_pos;if c.sequence==b.sequence then return end;local d,e=xPatternSequencer.get_number_of_lines(b.sequence)if not d then LOG("*** Could not switch to sequence, no pattern at this sequence index",b.sequence)return end;if not rns.transport.playing then b.line=cLib.clamp_value(c.line,1,d)rns.transport.edit_pos=b;return end;if c.line<d then b.line=c.line;rns.transport.playback_pos=b;return end;local f=4;local g,h=xPatternSequencer.get_number_of_lines(c.sequence)local i=d-(g-b.line)if i>d or i<0 then local j=rns.transport.lpb;i=b.line-g+d;if i<0 then while i<0 do i=i+j end else i=i%j end;local k=math.floor(g/j)%f;local l=math.floor(b.line/j)%f;i=i+l*j;if i>d then i=i%d end end;if i==0 then i=d end;b.line=i;rns.transport.playback_pos=b end;function xPatternSequencer.loop_current_section()local m=rns.transport.edit_pos.sequence;local n=xPatternSequencer.get_section_index_by_seq_pos(m)xPatternSequencer.loop_section_by_index(n)end;function xPatternSequencer.loop_section_by_index(n)local o=xPatternSequencer.gather_section_positions()if table.is_empty(o)then return end;if not o[n]then return end;local p=o[n]local q=o[n+1]and o[n+1]-1 or#rns.sequencer.pattern_sequence;local r=function(b,s,t)return b>=s and b<=t end;local u=false;local v=rns.transport.loop_sequence_range[1]==0 and rns.transport.loop_sequence_range[2]==0;if not v then local w,x=false,false;for y,z in ipairs(rns.sequencer.pattern_sequence)do if r(y,p,q)then if r(y,rns.transport.loop_sequence_start,rns.transport.loop_sequence_end)then if not w then w=true end;x=false else if not x then x=true end;w=false end end end;if w then u=false elseif x then u=true end else u=true end;if u then rns.transport.loop_sequence_range={p,q}else rns.transport.loop_sequence_range={}end end;function xPatternSequencer.gather_section_positions()local o={}for y,z in ipairs(rns.sequencer.pattern_sequence)do if rns.sequencer:sequence_is_start_of_section(y)then table.insert(o,y)end end;return o end;function xPatternSequencer.get_section_index_by_seq_pos(m)local o=xPatternSequencer.gather_section_positions()if not table.is_empty(o)then for y,z in ipairs(o)do if z>m then return y-1 elseif z==m then return y end end;return#o,o end end;function xPatternSequencer.set_scheduled_section(n)local o=gather_section_positions()if o[n]then rns.transport:set_scheduled_sequence(o[n])end end;function xPatternSequencer.get_playing_pattern()local A=rns.transport.playback_pos.sequence;return rns.patterns[rns.sequencer.pattern_sequence[A]]end;function xPatternSequencer.get_number_of_lines(a)TRACE("xPatternSequencer.get_number_of_lines(seq_idx)",a)assert(type(a)=="number")local B,C=xPatternSequencer.get_pattern_at_index(a)if B then return B.number_of_lines,C,B end end;function xPatternSequencer.get_pattern_at_index(a)TRACE("xPatternSequencer.get_pattern_at_index(seq_idx)",a)if a<1 or a>#rns.sequencer.pattern_sequence then return end;local C=rns.sequencer:pattern(a)if C then return rns:pattern(C),C end end;function xPatternSequencer.goto_previous()TRACE("xPatternSequencer.goto_previous()")local a=rns.selected_sequence_index;if a>1 then rns.selected_sequence_index=a-1 end end;function xPatternSequencer.goto_next()TRACE("xPatternSequencer.goto_next()")local a=rns.selected_sequence_index;local D=#rns.sequencer.pattern_sequence;if a<D then rns.selected_sequence_index=a+1 end end