class'xPersistentSettings'function xPersistentSettings.store(a,b,c,d)TRACE("xPersistentSettings.store(arr,token_start,token_end,instr)",a,b,c,d)local e=table.create()local f=xPersistentSettings._obtain_source(d)local g=true;for h,i in ipairs(f)do if i==b then g=false end;if g then e:insert(i)end;if i==c then g=true end end;local j=10;local k=true;local l=cLib.serialize_table(a,j,k)local m=cString.split(l,"\n")e:insert(b)for n,i in ipairs(m)do if n==1 then i="return "..i end;e:insert(i)end;e:insert(c)xPersistentSettings._update_source(e,d)return true end;function xPersistentSettings.retrieve(b,c,d)TRACE("xPersistentSettings.retrieve(token_start,token_end,instr)",b,c,d)local o=nil;local e=nil;local p=""local q=false;local f=xPersistentSettings._obtain_source(d)for h,i in ipairs(f)do if i==b then q=true elseif i==c then if not q then return nil,"Found end token before start token"else e,o=loadstring(p)if o then local r=string.format("xPersistentSettings: an error occurred when importing settings: %s",o)return nil,o end;e=e()return e end end;if q then p=p.."\n"..i end end;return false,"Did not find end token"end;function xPersistentSettings.test(b,c,d)TRACE("xPersistentSettings.test(token_start,token_end,instr)",b,c,d)local q=false;local f=xPersistentSettings._obtain_source(d)for h,i in ipairs(f)do if i==b then q=true elseif i==c then if q then return true else return false,"Found end token before start token"end end end;return false,"Did not find end token"end;function xPersistentSettings.clear(b,c,d)TRACE("xPersistentSettings.clear(token_start,token_end,instr)",b,c,d)local s=nil;local t=nil;local f=xPersistentSettings._obtain_source(d)for n,i in ipairs(f)do if i==b then s=n elseif i==c then if s then t=n;break else return false,"Found end token before start token"end end end;if not s or not t then return true end;local e={}for n,i in ipairs(f)do if n<s or n>t then table.insert(e,i)end end;xPersistentSettings._update_source(e,d)return true end;function xPersistentSettings._obtain_source(d)return d and d.comments or rns.comments end;function xPersistentSettings._update_source(u,d)if d then d.comments=u else rns.comments=u end end