class'xPlayPos'function xPlayPos:__init()TRACE("xPlayPos:__init()")self.last_beat=nil;self.line=property(self.get_line)self._line=nil;self.sequence=property(self.get_sequence)self._sequence=nil;local a=rns.transport.playing and rns.transport.playback_pos or rns.transport.edit_pos;self._line=a.line;self._sequence=a.sequence end;function xPlayPos:get_line()return self._line end;function xPlayPos:get_sequence()return self._sequence end;function xPlayPos:update()self:set(rns.transport.playback_pos)end;function xPlayPos:set(a)if self:has_changed(a)then self:maintain_position(a)end;self._line=a.line;self._sequence=a.sequence end;function xPlayPos:__call()return xPlayPos.get(self,self.last_beat)end;function xPlayPos.get(a,b)TRACE("xPlayPos:get_highres_pos()")if not a then a=rns.transport.playback_pos end;if not b then b=rns.transport.playback_pos_beats end;local b=cLib.fraction(b)local c=b*rns.transport.lpb;local d=math.floor(c)local e=cLib.scale_value(c,d,d+1,0,1)return{line=a.line,sequence=a.sequence,fraction=e}end;function xPlayPos:has_changed(a)return not(self._line==a.line and self._sequence==a.sequence)end;function xPlayPos:maintain_position(a)local b=cLib.fraction(rns.transport.playback_pos_beats)self.last_beat=b end;function xPlayPos:__tostring()return type(self)..":sequence="..tostring(self._sequence)..",line="..tostring(self._line)end