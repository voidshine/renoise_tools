cLib.require(_xlibroot.."xKeyZone")cLib.require(_xlibroot.."xInstrument")class'xSampleBufferOperation'function xSampleBufferOperation.run(a)TRACE("xSampleBufferOperation.run(args)",a)local b=xSampleBufferOperation._prepare(a)for c,d in ipairs(a.operations)do if type(d)=="function"then local e,f=pcall(function()d(b.new_sample.sample_buffer)end)if not e and f then if type(a.on_error)=="function"then LOG("*** An error occurred",f)a.on_error(f)end end else error("Unexpected argument")end end;xSampleBufferOperation._finalize(a,b)end;function xSampleBufferOperation._prepare(a)TRACE("xSampleBufferOperation._prepare(args)",a)a.create_sample=cReflection.as_boolean(a.create_sample,false)a.restore_selection=cReflection.as_boolean(a.restore_selection,false)a.restore_loop=cReflection.as_boolean(a.restore_loop,false)a.restore_zoom=cReflection.as_boolean(a.restore_zoom,false)local b={}b.instrument=rns.instruments[a.instrument_index]assert(type(b.instrument)=="Instrument")b.sample=b.instrument.samples[a.sample_index]assert(type(b.sample)=="Sample")b.buffer=xSample.get_sample_buffer(b.sample)assert(type(b.buffer)=="SampleBuffer")if a.restore_selection then b._cached_selection_start=b.buffer.selection_start;b._cached_selection_end=b.buffer.selection_end;b._cached_selected_channel=b.buffer.selected_channel end;if a.restore_loop then b._cached_loop_mode=b.sample.loop_mode;b._cached_loop_start=b.sample.loop_start;b._cached_loop_end=b.sample.loop_end end;if a.restore_zoom then b._cached_display_start=b.buffer.display_start;b._cached_display_length=b.buffer.display_length;b._cached_zoom_factor=b.buffer.vertical_zoom_factor end;b.new_sample_index,b.drumkit_mode=xInstrument.clone_sample(b.instrument,a.sample_index,{dest_sample_idx=a.force_sample_index,sample_rate=a.force_sample_rate,bit_depth=a.force_bit_depth,num_channels=a.force_channels,num_frames=a.force_frames})b.new_sample=b.instrument.samples[b.new_sample_index]assert(type(b.new_sample)=="Sample")assert(type(b.new_sample.sample_buffer)=="SampleBuffer")b.new_sample.sample_buffer:prepare_sample_data_changes()return b end;function xSampleBufferOperation._finalize(a,b)TRACE("xSampleBufferOperation._finalize()")b.new_sample.sample_buffer:finalize_sample_data_changes()if b.drumkit_mode then xKeyZone.shift_by_semitones(a.instrument,b.new_sample_index+1,-1)end;if not a.create_sample then b.instrument:delete_sample_at(a.sample_index)b.new_sample_index=a.sample_index end;local g=b.new_sample.sample_buffer;if g then if a.restore_selection then g.selection_end=b._cached_selection_end;g.selection_start=b._cached_selection_start;g.selected_channel=b._cached_selected_channel end;if a.restore_zoom then g.display_range={b._cached_display_start,b._cached_display_start+b._cached_display_length}g.vertical_zoom_factor=b._cached_zoom_factor end end;if a.restore_loop then if b.new_sample then xSample.set_loop_pos(b.new_sample,b._cached_loop_start,b._cached_loop_end)b.new_sample.loop_mode=b._cached_loop_mode end end;if type(a.on_complete)=="function"then a.on_complete({sample=b.new_sample,sample_index=b.new_sample_index,drumkit_mode=b.drumkit_mode})end end