cLib.require(_xlibroot.."xSongPos")cLib.require(_xlibroot.."xPatternSequencer")class'xSequencerSelection'local a=xSongPos.OUT_OF_BOUNDS.CAP;local b=xSongPos.LOOP_BOUNDARY.NONE;local c=xSongPos.BLOCK_BOUNDARY.NONE;function xSequencerSelection.get_selected_range()TRACE("xSequencerSelection.get_selected_range()")local d=rns.sequencer.selection_range;if d[1]==0 and d[2]==0 then return else return{start_sequence=d[1],start_line=1,end_sequence=d[2],end_line=xPatternSequencer.get_number_of_lines(d[2])}end end;function xSequencerSelection.get_selected_range_length()TRACE("xSequencerSelection.get_selected_range_length()")local e=rns.sequencer.selection_range;return e[2]-e[1]end;function xSequencerSelection.get_entire_range()TRACE("xSequencerSelection.get_entire_range()")local f=#rns.sequencer.pattern_sequence;return{start_sequence=1,start_line=1,end_sequence=f,end_line=xPatternSequencer.get_number_of_lines(f)}end;function xSequencerSelection.get_selected_index()TRACE("xSequencerSelection.get_selected_index()")local g=rns.selected_sequence_index;return{start_sequence=g,start_line=1,end_sequence=g,end_line=xPatternSequencer.get_number_of_lines(g)}end;function xSequencerSelection.get_pattern_selection()TRACE("xSequencerSelection.get_pattern_selection()")if not rns.selection_in_pattern then return else local g=rns.selected_sequence_index;return{start_sequence=g,start_line=rns.selection_in_pattern.start_line,end_sequence=g,end_line=rns.selection_in_pattern.end_line}end end;function xSequencerSelection.within_range(d,h)TRACE("xSequencerSelection.within_range(seq_range,songpos)",d,h)assert(type(d)=="table")if d.start_sequence>h.sequence or d.end_sequence<h.sequence then return false elseif d.start_sequence<h.sequence and d.end_sequence>h.sequence then return true else if d.start_sequence==h.sequence and d.start_line>h.line then return false end;if d.end_sequence==h.sequence and d.end_line<h.line then return false end end;return true end;function xSequencerSelection.pluck_from_range(d,i,j)TRACE("xSequencerSelection.pluck_from_range(seq_range,seq_idx,patt_num_lines)",d,i,j)assert(type(d)=="table")assert(type(i)=="number")if not j then local k,l=xPatternSequencer.get_pattern_at_index(i)j=k.number_of_lines end;if i>=d.start_sequence and i<=d.end_sequence then local m=d.start_sequence==i;local n=d.end_sequence==i;if not m and not n then return 1,j else local o=m and d.start_line or 1;local p=n and d.end_line or j;return o,p end end end;function xSequencerSelection.get_number_of_lines(d)TRACE("xSequencerSelection.get_number_of_lines(seq_range)",d)assert(type(d)=="table")local q=0;for i=d.start_sequence,d.end_sequence do local k,l=xPatternSequencer.get_pattern_at_index(i)assert(k,"Expected a pattern here")q=q+k.number_of_lines;if i==d.start_sequence then q=q-(d.start_line-1)end;if i==d.end_sequence then q=q-(k.number_of_lines-d.end_line)end end;return q end;function xSequencerSelection.shift_by_indices(d,r)TRACE("xSequencerSelection.shift_by_indices(seq_range,offset)",d,r)if r>0 then local f=#rns.sequencer.pattern_sequence;if d.end_sequence+r>f then return d end else if d.start_sequence+r<1 then return d end end;d.end_sequence=d.end_sequence+r;d.start_sequence=d.start_sequence+r end;function xSequencerSelection.shift_forward(d)TRACE("xSequencerSelection.shift_forward(seq_range)",d)assert(type(d)=="table")local s=xSequencerSelection.get_number_of_lines(d)local t={sequence=d.start_sequence,line=d.start_line}local u={sequence=d.end_sequence,line=d.end_line}local v={bounds_mode=a,loop_boundary=b,block_boundary=c}xSongPos.increase_by_lines(s,t,v)xSongPos.increase_by_lines(s,u,v)return{start_sequence=t.sequence,start_line=t.line,end_sequence=u.sequence,end_line=u.line}end;function xSequencerSelection.shift_backward(d)TRACE("xSequencerSelection.shift_backward(seq_range)",d)assert(type(d)=="table")local s=xSequencerSelection.get_number_of_lines(d)local t={sequence=d.start_sequence,line=d.start_line}local u={sequence=d.end_sequence,line=d.end_line}local v={bounds_mode=a,loop_boundary=b,block_boundary=c}xSongPos.decrease_by_lines(s,t,v)xSongPos.decrease_by_lines(s,u,v)return{start_sequence=t.sequence,start_line=t.line,end_sequence=u.sequence,end_line=u.line}end;function xSequencerSelection.apply_to_pattern(d)local i=rns.selected_sequence_index;local o,p=xSequencerSelection.pluck_from_range(d,i)rns.selection_in_pattern={start_track=rns.selection_in_pattern.start_track,start_column=rns.selection_in_pattern.start_column,start_line=o,end_track=rns.selection_in_pattern.end_track,end_column=rns.selection_in_pattern.end_column,end_line=p}end