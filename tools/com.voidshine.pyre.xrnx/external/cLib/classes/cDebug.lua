require(_clibroot.."cFilesystem")class'cDebug'function cDebug.serialize(a)local b,c=pcall(tostring,a)if b then return c else return"???"end end;function cDebug.concat_args(...)local c=""local d=select('#',...)for e=1,d do local a=select(e,...)if type(a)=='table'then c=c..cDebug.rdump(a)else c=c..cDebug.serialize(select(e,...))if e~=d then c=c.."\t"end end end;return c end;function cDebug.rdump(f,g,h)local c="\n"h=h or{}g=g or string.rep(' ',2)local i;for j,k in pairs(f)do if type(k)=='table'and not h[k]then h[k]=true;i=i or g..string.rep(' ',2)c=c..g..'['..cDebug.serialize(j)..'] => table\n'cDebug.rdump(k,i..string.rep(' ',2),h)else c=c..g..'['..cDebug.serialize(j)..'] => '..cDebug.serialize(k)..'\n'end end;return c end;function cDebug.remove_trace_statements()local l="Remove all TRACE statements from source files?"local m=renoise.app():show_prompt("Confirm",l,{"OK","Cancel"})if m=="Cancel"then return end;local n=renoise.tool().bundle_path;local o={"*.lua"}local p=function(q,r,type)if type==cFilesystem.FILETYPE.FILE then local s=q.."/"..r;local t,u=cFilesystem.load_string(s)if not t then if u then renoise.app():show_warning(u)end;return false end;local v=string.gsub(t,"\n%s*TRACE([^\n]*","")local w,u=cFilesystem.write_string_to_file(s,v)if not w then if u then renoise.app():show_warning(u)end;return false end end;return true end;cFilesystem.recurse(n,p,o)end;if _trace_filters~=nil then function TRACE(...)local c=cDebug.concat_args(...)for x,y in pairs(_trace_filters)do if c:find(y)then print(c)break end end end else function TRACE()end end