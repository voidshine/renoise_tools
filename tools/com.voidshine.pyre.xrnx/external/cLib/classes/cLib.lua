require(_clibroot.."cValue")require(_clibroot.."cNumber")class'cLib'cLib.HUGE_INT=0xFFFFFFFF;cLib.NIL={}cLib.REQUIRED={}function LOG(...)cLib.log(...)end;function TRACE(...)end;function cLib.log(...)local a={...}local b=select('#',...)local c,d=pcall(function()local e=""for f=1,b do e=e..tostring(a[f]).."\t"end;print(e)end)if not c then print(...)end end;function cLib.require(g)TRACE('cLib.require(file)',g)local c,d=pcall(function()local h=string.match(g,"[^\\/]*$")tostring(_G[h])end)local i=table.find(cLib.REQUIRED,g)if not c and not i then if not i then table.insert(cLib.REQUIRED,g)end;require(g)end end;function cLib.unpack_args(...)local a={...}if not a[1]then return{}else return a[1]end end;function cLib.pack_args(...)return#arg>0 and arg or nil end;function cLib.invoke_task(...)local j=select(1,...)j(select(2,...),select(3,...),select(4,...),select(5,...),select(6,...),select(7,...),select(8,...),select(9,...))end;function cLib.create_cvalue(k)local l=k.value or k.value_default;if type(l)=="number"then return cNumber(k)else return cValue(k)end end;function cLib.scale_value(m,n,o,p,q)return(m-n)*(q/(o-n)-p/(o-n))+p end;function cLib.string_to_percentage(r)TRACE("cLib.string_to_percentage(str)",r)return tonumber(string.sub(r,1,#r-1))end;function cLib.average(...)local s=0;for f=1,#arg do s=s+arg[f]end;return s/#arg end;function cLib.clamp_value(m,t,u)return m<t and t or m>u and u or m end;function cLib.wrap_value(m,t,u)return(m-t)%(u-t)+t end;function cLib.sign(v)return v<0 and-1 or 1 end;function cLib.inv_log_scale(w,l)return w-cLib.log_scale(w,w-l+1)end;function cLib.log_scale(w,l)return math.log(l)*w/math.log(w)end;function cLib.is_whole_number(b)return("%.8f"):format(b-math.floor(b))=="0.00000000"end;function cLib.gcd(x,b)while b~=0 do local y=x;x=b;b=y%b end;return x end;function cLib.lcm(x,b)return x~=0 and b~=0 and x*b/cLib.gcd(x,b)or 0 end;function cLib.least_common(k)local z=k[1]for f=1,#k-1,1 do z=cLib.lcm(z,k[f+1])end;return z end;function cLib.round_value(A)if A>=0 then return math.floor(A+.5)else return math.ceil(A-.5)end end;function cLib.round_with_precision(A,B)local C=10^(B or 0)return math.floor(A*C+0.5)/C end;function cLib.fundamental(A,D)local E=A;local F=0;while not cLib.float_compare(E,math.floor(E),D)do E=E+A;F=F+1 end;return math.floor(E),F end;function cLib.float_compare(G,H,D)G=cLib.round_value(G*D)H=cLib.round_value(H*D)return G==H end;function cLib.fraction(l)return l-math.floor(l)end;function cLib.get_hex_digits(l)return 8-#string.match(bit.tohex(l),"0*")end;function cLib.stringify_table(k,I,J)local s={}for K,L in ipairs(table.values(k))do table.insert(s,("%s%s%s"):format(I or"",tostring(L),J or""))end;return s end;function cLib.parse_str(r)local s;local c,d=pcall(function()s=loadstring("return "..r)()end)if c then return s else return nil,d end end;function cLib.table_has_equal_values(k)local l=nil;for K,L in ipairs(k)do if l==nil then l=L end;if l~=L then return false end end;return true end;function cLib.table_compare(M,N)return table.concat(M,",")==table.concat(N,",")end;function cLib.table_count(k)local b=0;if"table"==type(k)then for O in pairs(k)do b=b+1 end;return b else return nil end end;function cLib.serialize_object(P)local Q,e=pcall(tostring,P)if Q then e=string.gsub(e,"\n","\\n")e=string.gsub(e,'\\"','\\\\"')e=string.gsub(e,'"','\\"')return e else return"???"end end;function cLib.serialize_table(k,R,S)assert(type(k)=="table","this method accepts only a table as argument")local s="{\n"if not R then R=9999 end;local function T(k,U,V)local e=""U=U or string.rep(' ',2)V=V or 1;local W=V>R and true or false;local X;local Y=table.keys(k)table.sort(Y)for Z,O in ipairs(Y)do local m=k[O]local _=type(O)=='number'and''or'["'..cLib.serialize_object(O)..'"] = 'if type(m)=='table'then if table.is_empty(m)then e=e..U.._..'{},\n'elseif W then e=e..U.._..'"table...",\n'else X=X or U..string.rep(' ',2)e=e..U.._..'{\n'V=V+1;e=e..T(m,X..string.rep(' ',2),V)e=e..U..'},\n'end else if S and type(m)=="string"and string.find(m,"\n")then e=e..U.._..'[['..m..']]'..',\n'else local a0=type(m)=="string"and'"'or""e=e..U.._..a0 ..cLib.serialize_object(m)..a0 ..',\n'end end end;return e end;s=s..T(k).."}"return s end