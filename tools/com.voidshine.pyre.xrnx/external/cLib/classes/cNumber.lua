require(_clibroot.."cValue")class'cNumber'(cValue)cNumber.POLARITY={UNIPOLAR=1,BIPOLAR=2}function cNumber:__init(...)TRACE("cNumber:__init(...)")local a=cLib.unpack_args(...)self.polarity=a.polarity or cNumber.POLARITY.UNIPOLAR;self.value_min=a.value_min or 0;self.value_max=a.value_max or 1;self.value_quantum=a.value_quantum or nil;self.value_enums=a.value_enums or nil;self.value_factor=a.value_factor or 1;self.value_tostring=a.value_tostring or nil;self.value_tonumber=a.value_tonumber or nil;self.zero_based=type(a.zero_based)=="boolean"and a.zero_based or false;cValue.__init(self,...)end;function cNumber:add(b)self:set_value(self._value+b)end;function cNumber:subtract(b)self:set_value(self._value-b)end;function cNumber:multiply(b)self:set_value(self._value*b)end;function cNumber:divide(b)self:set_value(self._value/b)end;function cNumber:set_value(b)self._value=cLib.clamp_value(b,self.value_min,self.value_max)end;function cNumber:__add(b)self:add(b)return self end;function cNumber:__sub(b)self:subtract(b)return self end;function cNumber:__mul(b)self:multiply(b)return self end;function cNumber:__div(b)self:divide(b)return self end